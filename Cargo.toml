[package]
name = "arne"
description = "Artificial Recurrent Network Evolution"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
plotters = "0.3.5"
rayon = "1.1"
approx = "0.5.1"
rand = "0.8.5"
rand_chacha = "0.3.1"
lazy_static = "1.4.0"
rand_distr = "0.4.3"
serde_json = "1.0"
serde = {version = "1.0", features = ["derive"]}
nalgebra = "0.33.0"
image = {version = "=0.24.9", features=["rayon"]}
imageproc = "0.23.0"
static-toml = "1.2.0"
log = "0.4.21"
# env_logger = "0.11.3"
indicatif = {version = "0.17.8", features = ["rayon"]}
skeletonize = "0.2"
toml = "0.8.16"
rusttype = "0.9.3"
clap = { version = "4.5.13", features = ["derive"] }
xml2json-rs = "1.0.1"
# indicatif-log-bridge = "0.2.3"
itertools = "0.13"

[dependencies.petgraph]
version = "0.6.5"
features = ["serde-1"]

[dependencies.bevy]
version = "0.14.2"
# Disable the default features if there are any that you do not want
default-features = false
features = [
  # Bevy functionality:
  # "multi-threaded",     # Run with multithreading
#   "bevy_asset",         # Assets management
#   "bevy_audio",         # Builtin audio
#   "bevy_gilrs",         # Gamepad input support
#   "bevy_scene",         # Scenes management
#   "bevy_winit",         # Window management (cross-platform Winit backend)
#   "bevy_render",        # Rendering framework core
#   "bevy_core_pipeline", # Common rendering abstractions
#   "bevy_gizmos",        # Support drawing debug lines and shapes
#   "bevy_sprite",        # 2D (sprites) rendering
#   "bevy_pbr",           # 3D (physically-based) rendering
#   "bevy_gltf",          # GLTF 3D assets format support
#   "bevy_text",          # Text/font rendering
#   "bevy_ui",            # UI toolkit
#   "animation",          # Animation support
#   "tonemapping_luts",   # Support different camera Tonemapping modes (enables KTX2+zstd)
#   "default_font",       # Embed a minimal default font for text/UI
 # Development/Debug features:
  "dynamic_linking",   # Dynamic linking for faster compile-times
  # "trace",             # Enable tracing for performance measurement
  # "detailed_trace",    # Make traces more verbose
  # "trace_tracy",       # Tracing using `tracy`
  # "trace_tracy_memory", # + memory profiling
  # "trace_chrome",      # Tracing using the Chrome format
  # "wgpu_trace",        # WGPU/rendering tracing
  # "debug_glam_assert", # Assertions to validate math (glam) usage
  # "embedded_watcher",  # Hot-reloading for Bevy's internal/builtin assets
]

# Enable a small amount of optimization in debug mode
[profile.dev]
opt-level = 1

# Enable high optimizations for dependencies (incl. Bevy), but not for our code:
[profile.dev.package."*"]
opt-level = 3

# more performance at the cost of very slow compile times
# configuration for the most aggressive optimizations possible
[profile.release]
lto = true
opt-level = 3
codegen-units = 1
incremental = false
debug = false

